#!/bin/bash

# Script Demonstrativo: Diferentes Formas de Usar Hooks de Inicializa√ß√£o
# Mostra como garantir que verifica√ß√µes rodem antes dos containers

set -e

echo "üîß Demonstra√ß√£o: Hooks de Inicializa√ß√£o no Docker Compose"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "=========================================="
echo "    OP√á√ïES DE HOOKS DE INICIALIZA√á√ÉO"
echo "=========================================="
echo ""

echo "1Ô∏è‚É£  OP√á√ÉO 1: Script Wrapper (Recomendado)"
echo "   ‚úÖ Mais flex√≠vel e controlado"
echo "   ‚úÖ Pode fazer verifica√ß√µes complexas"
echo "   ‚úÖ Logs detalhados"
echo "   ‚ùå Requer script externo"
echo ""
echo "   Uso: ./scripts/start-production.sh"
echo ""

echo "2Ô∏è‚É£  OP√á√ÉO 2: Init Containers (Docker Compose)"
echo "   ‚úÖ Integrado ao Docker Compose"
echo "   ‚úÖ Depend√™ncias autom√°ticas"
echo "   ‚úÖ Roda apenas uma vez"
echo "   ‚ùå Menos flex√≠vel"
echo ""
echo "   Uso: docker compose -f docker-compose.prod-with-init.yml up -d"
echo ""

echo "3Ô∏è‚É£  OP√á√ÉO 3: Profiles (Docker Compose Extensions)"
echo "   ‚úÖ Mais moderno"
echo "   ‚úÖ Reutiliz√°vel"
echo "   ‚úÖ Limpo e organizado"
echo "   ‚ùå Requer Docker Compose v2.4+"
echo ""
echo "   Uso: docker compose --profile init -f docker-compose.prod-extensions.yml up -d"
echo ""

echo "=========================================="
echo "    EXEMPLOS DE USO"
echo "=========================================="
echo ""

# Fun√ß√£o para demonstrar Op√ß√£o 1
demo_option1() {
    log_info "Demonstrando Op√ß√£o 1: Script Wrapper"
    echo "   Este script executa verifica√ß√µes ANTES de subir containers:"
    echo "   - Verifica Docker"
    echo "   - Verifica arquivos necess√°rios"
    echo "   - Verifica espa√ßo em disco"
    echo "   - Verifica mem√≥ria"
    echo "   - Verifica portas"
    echo "   - Prepara volumes e permiss√µes"
    echo "   - S√≥ ent√£o sobe os containers"
    echo ""
}

# Fun√ß√£o para demonstrar Op√ß√£o 2
demo_option2() {
    log_info "Demonstrando Op√ß√£o 2: Init Containers"
    echo "   O docker-compose.prod-with-init.yml cont√©m:"
    echo "   - init-volumes: prepara volumes"
    echo "   - check-ports: verifica portas"
    echo "   - Todos os outros containers dependem desses"
    echo "   - Containers s√≥ sobem ap√≥s init containers terminarem"
    echo ""
}

# Fun√ß√£o para demonstrar Op√ß√£o 3
demo_option3() {
    log_info "Demonstrando Op√ß√£o 3: Profiles"
    echo "   O docker-compose.prod-extensions.yml usa:"
    echo "   - Profile 'init' para verifica√ß√µes"
    echo "   - pre-init: container de inicializa√ß√£o"
    echo "   - Uso: --profile init para ativar verifica√ß√µes"
    echo "   - Uso: sem profile para deploy normal"
    echo ""
}

# Executar demonstra√ß√µes
demo_option1
demo_option2
demo_option3

echo "=========================================="
echo "    QUAL OP√á√ÉO ESCOLHER?"
echo "=========================================="
echo ""

echo "üéØ PARA PRODU√á√ÉO:"
echo "   Recomendo a OP√á√ÉO 1 (Script Wrapper)"
echo "   - Mais controle e visibilidade"
echo "   - F√°cil de debugar"
echo "   - Pode incluir verifica√ß√µes customizadas"
echo ""

echo "üéØ PARA DESENVOLVIMENTO:"
echo "   Recomendo a OP√á√ÉO 3 (Profiles)"
echo "   - Mais limpo"
echo "   - Integrado ao Docker Compose"
echo "   - F√°cil de ativar/desativar"
echo ""

echo "üéØ PARA SIMPLICIDADE:"
echo "   Use a OP√á√ÉO 2 (Init Containers)"
echo "   - Sempre roda automaticamente"
echo "   - N√£o precisa lembrar de comandos especiais"
echo ""

echo "=========================================="
echo "    COMANDOS PR√ÅTICOS"
echo "=========================================="
echo ""

echo "üöÄ Deploy com verifica√ß√µes (Op√ß√£o 1):"
echo "   chmod +x scripts/start-production.sh"
echo "   sudo ./scripts/start-production.sh"
echo ""

echo "üöÄ Deploy com init containers (Op√ß√£o 2):"
echo "   docker compose -f docker-compose.prod-with-init.yml up -d"
echo ""

echo "üöÄ Deploy com profiles (Op√ß√£o 3):"
echo "   docker compose --profile init -f docker-compose.prod-extensions.yml up -d"
echo ""

echo "üöÄ Deploy normal (sem verifica√ß√µes):"
echo "   docker compose -f docker-compose.prod.yml up -d"
echo ""

echo "=========================================="
echo "    VANTAGENS DOS HOOKS"
echo "=========================================="
echo ""

echo "‚úÖ PREVEN√á√ÉO DE PROBLEMAS:"
echo "   - Detecta problemas ANTES de subir containers"
echo "   - Evita falhas durante o deploy"
echo "   - Reduz tempo de troubleshooting"
echo ""

echo "‚úÖ CONFIABILIDADE:"
echo "   - Deploy sempre consistente"
echo "   - Permiss√µes sempre corretas"
echo "   - Portas sempre verificadas"
echo ""

echo "‚úÖ AUTOMA√á√ÉO:"
echo "   - Sem interven√ß√£o manual"
echo "   - Funciona em qualquer servidor"
echo "   - Documenta√ß√£o viva"
echo ""

echo "==========================================" 