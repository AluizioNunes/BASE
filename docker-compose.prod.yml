version: '3.9'

############################
#  DOCKER COMPOSE - PROD   #
############################

services:
  traefik:
    image: traefik:v3.4
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/BASE/volumes/Backend/traefik_data:/letsencrypt
    command:
      # Providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=base_network
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Dashboard
      - --api.dashboard=true
      - --api.insecure=true
      # Logs
      - --log.level=INFO
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`10.10.255.111`) && PathPrefix(`/traefik`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.middlewares.dashboard-stripprefix.stripprefix.prefixes=/traefik"
      - "traefik.http.routers.dashboard.middlewares=dashboard-stripprefix"
    networks:
      - base_network

  frontend:
    build: .
    command: sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 3000"
    environment:
      - VITE_API_URL=http://10.10.255.111/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`10.10.255.111`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - base_network

  backend:
    build: 
      context: ./Backend
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - /var/lib/docker/BASE/volumes/Backend/uploads_data:/app/uploads
    environment:
      - DBHOST=db
      - DBNAME=BASE
      - DBUSER=BASE
      - DBPASSWORD=BASE
      - DBSCHEMA=BASE
      - BACKEND_CORS_ORIGINS=http://10.10.255.111
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`10.10.255.111`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - base_network

  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    hostname: rabbitmq
    volumes:
      - /var/lib/docker/BASE/volumes/rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=BASE
      - RABBITMQ_DEFAULT_PASS=BASE
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`10.10.255.111`) && PathPrefix(`/rabbitmq`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.middlewares.rabbitmq-stripprefix.stripprefix.prefixes=/rabbitmq"
      - "traefik.http.routers.rabbitmq.middlewares=rabbitmq-stripprefix"
    networks:
      - base_network

  db:
    image: postgres:17.5
    volumes:
      - /var/lib/docker/BASE/volumes/Backend/pgsql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=BASE
      - POSTGRES_USER=BASE
      - POSTGRES_PASSWORD=BASE
      - POSTGRES_SCHEMA=BASE
    networks:
      - base_network

  redis:
    image: redis:8.0-alpine
    command: redis-server --requirepass BASE
    volumes:
      - /var/lib/docker/BASE/volumes/redis_data:/data
    networks:
      - base_network

networks:
  base_network:
    driver: bridge 
