version: '3.9'

services:
  traefik:
    image: traefik:v3.5
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --log.level=INFO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${SERVER_IP}`) && PathPrefix(`/traefik`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.traefik-stripprefix.stripprefix.prefixes=/traefik"
      - "traefik.http.routers.traefik.middlewares=traefik-stripprefix"
      - "traefik.http.routers.traefik.priority=100"
    networks:
      - base_network

  frontend:
    build: .
    command: sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 3000"
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "3000:3000"
    labels:
      # Rota principal do frontend (página inicial)
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-main.rule=Host(`${SERVER_IP}`) && Path(`/`)"
      - "traefik.http.routers.frontend-main.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend-main.priority=10"
      
      # Rota para o wizard de setup
      - "traefik.http.routers.frontend-wizard.rule=Host(`${SERVER_IP}`) && PathPrefix(`/wizard`)"
      - "traefik.http.routers.frontend-wizard.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend-wizard.priority=20"
      
      # Rota para login
      - "traefik.http.routers.frontend-login.rule=Host(`${SERVER_IP}`) && PathPrefix(`/login`)"
      - "traefik.http.routers.frontend-login.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend-login.priority=20"
      
      # Rota para outras páginas do frontend (fallback)
      - "traefik.http.routers.frontend-other.rule=Host(`${SERVER_IP}`) && !PathPrefix(`/api`) && !PathPrefix(`/grafana`) && !PathPrefix(`/rabbitmq`) && !PathPrefix(`/loki`) && !PathPrefix(`/traefik`) && !PathPrefix(`/wizard`) && !PathPrefix(`/login`)"
      - "traefik.http.routers.frontend-other.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend-other.priority=1"
    networks:
      - base_network

  backend:
    build: 
      context: ./Backend
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/Backend/uploads_data:/app/uploads
    environment:
      - DBHOST=${DB_HOST}
      - DBNAME=${DB_NAME}
      - DBUSER=${DB_USER}
      - DBPASSWORD=${DB_PASSWORD}
      - DBSCHEMA=${DB_SCHEMA}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
    ports:
      - "8001:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${SERVER_IP}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.backend.priority=10"
    networks:
      - base_network

  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    hostname: rabbitmq
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "15673:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`${SERVER_IP}`) && PathPrefix(`/rabbitmq`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.routers.rabbitmq.middlewares=rabbitmq-stripprefix"
      - "traefik.http.middlewares.rabbitmq-stripprefix.stripprefix.prefixes=/rabbitmq"
      - "traefik.http.routers.rabbitmq.priority=10"
    networks:
      - base_network

  db:
    image: postgres:17.5
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/Backend/pgsql_data:/var/lib/postgresql/data
      - ./Backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_SCHEMA=${DB_SCHEMA}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - base_network

  redis:
    image: redis:8.0-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - base_network

  grafana:
    image: grafana/grafana:latest
    user: "472:472"
    ports:
      - "3010:3010"
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_HTTP_PORT=3010
      - GF_SERVER_ROOT_URL=http://${SERVER_IP}/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${SERVER_IP}`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3010"
      - "traefik.http.routers.grafana.middlewares=grafana-stripprefix"
      - "traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.priority=50"
    networks:
      - base_network

  loki:
    image: grafana/loki:latest
    user: "1000:1000"
    command: -config.file=/etc/loki/local-config.yaml -server.http-listen-port=3100
    ports:
      - "3100:3100"
    volumes:
      - /var/lib/docker/${APP_NAME}/volumes/loki_data:/loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.rule=Host(`${SERVER_IP}`) && PathPrefix(`/loki`)"
      - "traefik.http.routers.loki.entrypoints=web"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
      - "traefik.http.routers.loki.priority=10"
    networks:
      - base_network

networks:
  base_network:
    driver: bridge 
